delegate_python_path: '{process.core_tree}/bprocess/tests'
plugin_load_command: from bprocess.tests.test_base import TestPluginLoading; TestPluginLoading().execute()

packages:
  #####################
  test-environment: ##
  ###################
    environment:
      resolve: True
      variables:
        PYTHONPATH: '{process.core_tree}'
        
  python:
    executable: '{process.python_executable}'
    
  py-program:
    # Use python's executable as ours
    requires: test-environment
    alias: python
    boot:
      python_paths: '{delegate_python_path}'
      import: delegate
    delegate: TestCommunicatorDelegate
    arguments:
      # Just for testing ...
      prepend:
        - -c
      append:
        - from bprocess.tests.test_base import TestCommand; TestCommand().execute()

  py-program-no-delegate:
    # This one is expected to use the communicator delecate
    requires: py-program
    alias: py-program

  intermediate-package:
    requires: py-program

  py-program-delegate-via-requires:
    requires: intermediate-package
    alias: python

  py-program-delegate-via-requires-in-remote-config:
    alias: py-program-delegate-via-requires
    boot:
      plugin_paths: '{delegate_python_path}/delegate.py'
    include:
      # for fun, just the same config again - it won't be loaded as we detect this
      - '{process.executable.dirname}/etc'
      # this one will override the 
      - '{process.executable.as_KVPath.dirname}/etc/per-package/some-packages.yaml'
      # non-existing
      - '/foobar'

  py-program-overrides:
    # A python program to receive overrides of the context before starting the program
    requires: py-program
    # tests recursive resolution of executable alias
    alias: py-program
    # tests overrides to be handled correctly
    delegate: TestOverridesDelegate
    # everything else is inherited by the base, the program itself is not interesting

  load-from-directories:
    alias: python
    requires: test-environment
    arguments:
      prepend:
        - -c
        - '{plugin_load_command}'
        - no-settings

  load-from-settings:
    alias: load-from-directories
    requires: test-environment
    python:
      plugin_paths:
        - '{delegate_python_path}/etc/plug-ins/test_plugin.py'
    arguments:
      resolve: True
      prepend:
        - -c
        - '{plugin_load_command}'
        - settings

  nosetests:
    # default nosetest starter
    alias: python 
    requires:
      # for all the requirements (for testing, remove the following line and list
      # module requirements manually
      - test-environment
    arguments:
      # Just for testing ...
      prepend:
        - -c
        - import nose; import sys; nose.main(argv = ['nosetests'] + sys.argv[1:])

  nosetests-delegate:
    # tests the scripted delegate
    alias: python
    requires:
      - test-environment
    boot:
      # needs to re-import the module with the respective delegate
      import: bprocess.tests.base
    delegate: PythonScriptNosetestDelegate

  